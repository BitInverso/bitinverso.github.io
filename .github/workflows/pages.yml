name: Optimize & Deploy to Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  encode-assets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Instalar ffmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Permiss√µes no script
        run: chmod +x tools/encode_videos.sh

      # ‚úÖ Restaura do cache (pula re-encode se fonte/script n√£o mudaram)
      - name: Restore encoded videos cache
        id: restore-encodes
        uses: actions/cache/restore@v4
        with:
          path: |
            assets/hero-background-480.webm
            assets/hero-background-480.mp4
            assets/hero-background-720.webm
            assets/hero-background-720.mp4
            assets/hero-background-1080.webm
            assets/hero-background-1080.mp4
          key: ${{ runner.os }}-encodes-${{ hashFiles('assets/hero-background.mp4', 'tools/encode_videos.sh') }}
          restore-keys: |
            ${{ runner.os }}-encodes-

      # üîÅ S√≥ re-encode se N√ÉO houver cache hit
      - name: Re-encoder v√≠deos (MP4 + WEBM em 480/720/1080)
        if: steps.restore-encodes.outputs.cache-hit != 'true'
        run: |
          tools/encode_videos.sh assets/hero-background.mp4
          # ou: tools/encode_videos.sh assets/hero-background.mp4 --force

      # üíæ Salva no cache (apenas quando reprocessou)
      - name: Save encoded videos cache
        if: steps.restore-encodes.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            assets/hero-background-480.webm
            assets/hero-background-480.mp4
            assets/hero-background-720.webm
            assets/hero-background-720.mp4
            assets/hero-background-1080.webm
            assets/hero-background-1080.mp4
          key: ${{ steps.restore-encodes.outputs.cache-primary-key }}

      - name: Validar sa√≠das
        run: |
          test -f assets/hero-background-480.webm
          test -f assets/hero-background-480.mp4
          test -f assets/hero-background-720.webm
          test -f assets/hero-background-720.mp4
          test -f assets/hero-background-1080.webm
          test -f assets/hero-background-1080.mp4

      # Publica os assets gerados/restaurados para o pr√≥ximo job
      - name: Upload encoded assets
        uses: actions/upload-artifact@v4
        with:
          name: encoded-assets
          path: |
            assets/hero-background-*.webm
            assets/hero-background-*.mp4
          if-no-files-found: error

  build:
    needs: encode-assets
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Baixa os assets encodados do job anterior
      - name: Download encoded assets
        uses: actions/download-artifact@v4
        with:
          name: encoded-assets
          path: assets

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install deps (Node)
        run: npm ci || true

      - name: Build CSS
        run: NODE_ENV=production npm run build --if-present

      - name: Upload artifact (site)
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
